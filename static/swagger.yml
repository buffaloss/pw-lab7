openapi: '3.0.2'
info:
  title: Wander Whirl
  version: '1.0'
servers:
  - url: https://127.0.0.1:5000/api/
paths:
  /token:
    post:
      summary: Get refresh token
      description: Get refresh token based on the specified permissions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username: 
                  type: string
                password:
                  type: string
                permissions:
                  type: string
                  description: "G: Get, P: Post, D: Delete, U: Update\nExample: 'GPDU' for all permissions"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  refresh_token:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /refresh:
    get:
      summary: Refresh access token
      description: Refresh access token based on the refresh token
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            default: Bearer 
            type: string
          description: "Bearer <refresh_token>"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /location/{id}:
    get:
      summary: Get location by ID
      description: Retrieve a location by its ID if the user has the 'G' permission.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the location to retrieve
      responses:
        '200':
          description: Successful response with location data
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    rating:
                      type: number
                    favourite:
                      type: boolean
        '404':
          description: Location not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '403':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
    delete:
      summary: Delete location by ID
      description: Delete a location by its ID if the user has the 'D' permission.
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the location to delete
      responses:
        '200':
          description: Successful deletion
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '404':
          description: Location not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '403':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
  /location/:
    get:
      summary: Get all locations
      description: Retrieve all locations or a subset based on 'from' and 'count' query parameters if the user has the 'G' permission.
      parameters:
        - in: query
          name: from
          schema:
            type: integer
          required: false
          description: The starting ID for a subset of locations
        - in: query
          name: count
          schema:
            type: integer
          required: false
          description: The number of locations to retrieve from the starting ID
      responses:
        '200':
          description: Successful response with location data
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: object
                  properties:
                    name:
                      type: string
                    description:
                      type: string
                    rating:
                      type: number
                    favourite:
                      type: boolean
        '404':
          description: Locations not found in the specified range
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '403':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
    post:
      summary: Add new location
      description: Add a new location if the user has the 'P' permission.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  rating:
                    type: number
                  favourite:
                    type: boolean
      responses:
        '201':
          description: Location created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '409':
          description: Conflict - location already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '403':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
    put:
      summary: Update existing location
      description: Update a location if the user has the 'U' permission.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                type: object
                properties:
                  name:
                    type: string
                  description:
                    type: string
                  rating:
                    type: number
                  favourite:
                    type: boolean
      responses:
        '200':
          description: Location updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '404':
          description: Location not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '403':
          description: Unauthorized access
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  msg:
                    type: string

components:
  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - jwt: []
